"""
1. В начале итерации устанавливается ведущий элемент. На первой итерации — самый первый элемент, и по умолчанию он
считается уже отсортированным.
2. Сохраняем ведущий элемент в дополнительную переменную.
3. Далее происходит поиск места, куда должен встать ведущий элемент в уже отсортированной (левой) части массива.
Можно, например, использовать цикл while с условием достижения границы и/или успешным нахождением элемента.
Пока условие цикла выполняется, происходит сдвиг каждого элемента вправо.
4. По завершении цикла сохранённое значение переменной помещается на освободившееся место. Алгоритм завершается.
"""

array = [2, 3, 1, 4, 6, 5, 9, 8, 7]

for i in range(1, len(array)):
    x = array[i]
    idx = i
    while idx > 0 and array[idx-1] > x:
        array[idx] = array[idx-1]
        idx -= 1
    array[idx] = x

print(array)


# Задание 22.8.5
# Чему равно количество сравнений, которые производятся в алгоритме сортировки вставками?
# Проверьте на том же массиве, как и в предыдущем аналогичном задании.
# В данной задаче под количеством сравнений понимается количество выполнений цикла while,
# при котором происходит изменение позиций элементов в массиве

array = [2, 3, 1, 4, 6, 5, 9, 8, 7]

count = 0

for i in range(1, len(array)):
    x = array[i]
    idx = i
    while idx > 0 and array[idx-1] > x:
        array[idx] = array[idx-1]
        idx -= 1
        count += 1
    array[idx] = x

print(array)
print(count)